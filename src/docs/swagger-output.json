{
  "swagger": "2.0",
  "info": {
    "title": "ITMastermindz API",
    "description": "API documentation for ITMastermindz, a platform for IT-related online courses",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/users": {
      "post": {
        "description": "Create a new user on registration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sample schema to add new user",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "JohnDoe@hotmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                },
                "about_me": {
                  "type": "string",
                  "example": ""
                },
                "country": {
                  "type": "string",
                  "example": "United States"
                },
                "job_title": {
                  "type": "string",
                  "example": "UI/UX Designer"
                },
                "role": {
                  "type": "string",
                  "example": "student"
                }
              },
              "required": [
                "first_name",
                "last_name",
                "email",
                "password",
                "country",
                "job_title",
                "role"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully created, returns the user's jsonwebtoken.",
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "jwt here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "Returns a list of all users information",
        "responses": {
          "200": {
            "description": "Success, returns a list of user objects.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "about_me": {
                  "type": "string",
                  "example": "Hi! My name is John Doe"
                },
                "country": {
                  "type": "string",
                  "example": "United States"
                },
                "join_date": {
                  "type": "string",
                  "example": "2022-06-04T00:00:00.000Z"
                },
                "job_title": {
                  "type": "string",
                  "example": "UI/UX Designer"
                },
                "role": {
                  "type": "string",
                  "example": "student"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Update a user\\'s data. User id is obtained from jwt",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sample schema to update user",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "John@gmail.com"
                },
                "about_me": {
                  "type": "string",
                  "example": "Maxing out mastermindz"
                },
                "country": {
                  "type": "string",
                  "example": "United States"
                },
                "job_title": {
                  "type": "string",
                  "example": "UI/UX Designer"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/sublecture/{lid}": {
      "post": {
        "description": "Add a sublecture as viewed by the user. User id is obtained from jwt token",
        "parameters": [
          {
            "name": "lid",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "The id of the sublecture"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success, sublecture is marked as viewed."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "description": "Verify that a user\\'s login credentials are correct and generate a jwt",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged in, returns the user's jsonwebtoken.",
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "jwt here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Incorrect login credentials"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/private": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/verifyjwt": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Return the information of the user as specified in the id parameter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, returns a user object",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "about_me": {
                  "type": "string",
                  "example": "Hi! My name is John Doe"
                },
                "country": {
                  "type": "string",
                  "example": "United States"
                },
                "join_date": {
                  "type": "string",
                  "example": "2022-06-04T00:00:00.000Z"
                },
                "job_title": {
                  "type": "string",
                  "example": "UI/UX Designer"
                },
                "role": {
                  "type": "string",
                  "example": "student"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/pic/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/complete/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/courses/sublectures/{uid}/{cid}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/pic": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/password": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "new_password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
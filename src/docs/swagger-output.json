{
  "swagger": "2.0",
  "info": {
    "title": "ITMastermindz API",
    "description": "API documentation for ITMastermindz, a platform for IT-related online courses",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create a new user on registration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sample schema to add new user",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "JohnDoe@hotmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                },
                "about_me": {
                  "type": "string",
                  "example": ""
                },
                "country": {
                  "type": "string",
                  "example": "United States"
                },
                "job_title": {
                  "type": "string",
                  "example": "UI/UX Designer"
                },
                "role": {
                  "type": "string",
                  "example": "student"
                }
              },
              "required": [
                "first_name",
                "last_name",
                "email",
                "password",
                "country",
                "job_title",
                "role"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully created, returns the user's jsonwebtoken and role.",
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "jwt here"
                },
                "role": {
                  "type": "string",
                  "example": "role"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get a list of all users information",
        "responses": {
          "200": {
            "description": "Success, returns a list of user objects.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "first_name": {
                    "type": "string",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "about_me": {
                    "type": "string",
                    "example": "Hi! My name is John Doe"
                  },
                  "country": {
                    "type": "string",
                    "example": "United States"
                  },
                  "join_date": {
                    "type": "string",
                    "example": "2022-06-04T00:00:00.000Z"
                  },
                  "job_title": {
                    "type": "string",
                    "example": "UI/UX Designer"
                  },
                  "role": {
                    "type": "string",
                    "example": "student"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update a user\\'s account data. User id is obtained from jwt",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sample schema to update user",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "John@gmail.com"
                },
                "about_me": {
                  "type": "string",
                  "example": "Maxing out mastermindz"
                },
                "country": {
                  "type": "string",
                  "example": "United States"
                },
                "job_title": {
                  "type": "string",
                  "example": "UI/UX Designer"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/sublecture/{lid}": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Add a sublecture as viewed by the user. User id is obtained from jwt token",
        "parameters": [
          {
            "name": "lid",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the sublecture"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success, sublecture is marked as viewed."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Verify that a user\\'s login credentials are correct and generate a jwt",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged in, returns the user's jsonwebtoken and role.",
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "example": "jwt here"
                },
                "role": {
                  "type": "string",
                  "example": "role"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Incorrect login credentials"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/private": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Retrieve a user\\'s information, but contains more sensetive data (such as email). User id obtained from jwt",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, returns a list of user objects.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "about_me": {
                  "type": "string",
                  "example": "Hi! My name is John Doe"
                },
                "country": {
                  "type": "string",
                  "example": "United States"
                },
                "join_date": {
                  "type": "string",
                  "example": "2022-06-04T00:00:00.000Z"
                },
                "job_title": {
                  "type": "string",
                  "example": "UI/UX Designer"
                },
                "role": {
                  "type": "string",
                  "example": "student"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/decodejwt": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Decode the jwt. Returns the decoded payload if successful",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, token is valid. Returns the payload",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "number",
                  "example": 1
                },
                "role": {
                  "type": "string",
                  "example": "student"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Token is not provided"
          },
          "403": {
            "description": "Token is invalid"
          }
        }
      }
    },
    "/users/pic": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get the base64 encoded image of the profile picture of the user based on the jwt",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, returns the id of the profile picture, the user's id and the base64 encoded picture",
            "schema": {
              "type": "object",
              "properties": {
                "pic_id": {
                  "type": "number",
                  "example": 1
                },
                "user_id": {
                  "type": "number",
                  "example": 1
                },
                "img": {
                  "type": "string",
                  "example": "base64-string-here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update a user\\'s profile picture. User id is obtained from jwt",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "pic",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "The file object of the profile picture to update"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "No file uploaded"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/pic/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get the base64 encoded image of the profile picture of the user as specified in the id parameter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, returns the id of the profile picture, the user's id and the base64 encoded picture",
            "schema": {
              "type": "object",
              "properties": {
                "pic_id": {
                  "type": "number",
                  "example": 1
                },
                "user_id": {
                  "type": "number",
                  "example": 1
                },
                "img": {
                  "type": "string",
                  "example": "base64-string-here"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/complete/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Retrieve a user\\'s profile information (regular info, profile pic, overall quiz data, completed courses). User id obtained from parameter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, returns user data",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "first_name": {
                  "type": "string",
                  "example": "Toby"
                },
                "last_name": {
                  "type": "string",
                  "example": "Dean"
                },
                "about_me": {
                  "type": "string",
                  "example": "Maxing out mastermindz"
                },
                "country": {
                  "type": "string",
                  "example": "United States"
                },
                "join_date": {
                  "type": "string",
                  "example": "2022-06-04T00:00:00.000Z"
                },
                "job_title": {
                  "type": "string",
                  "example": "University Student"
                },
                "role": {
                  "type": "string",
                  "example": "student"
                },
                "pic_id": {
                  "type": "number",
                  "example": 1
                },
                "img": {
                  "type": "string",
                  "example": "base64-string"
                },
                "quiz_accuracy": {
                  "type": "number",
                  "example": 1
                },
                "questions_completed": {
                  "type": "number",
                  "example": 20
                },
                "completed_courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "course_id": {
                        "type": "number",
                        "example": 8
                      },
                      "date_completed": {
                        "type": "string",
                        "example": "2023-10-08T00:00:00.000Z"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/courses/sublectures/{cid}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get all viewed sublectures by a user under a course. User is obtained from jwt",
        "parameters": [
          {
            "name": "cid",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the course"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, returns a list of sublecture ids"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/search": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get the information of the user as specified in the id parameter",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, returns a user object",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "about_me": {
                  "type": "string",
                  "example": "Hi! My name is John Doe"
                },
                "country": {
                  "type": "string",
                  "example": "United States"
                },
                "join_date": {
                  "type": "string",
                  "example": "2022-06-04T00:00:00.000Z"
                },
                "job_title": {
                  "type": "string",
                  "example": "UI/UX Designer"
                },
                "role": {
                  "type": "string",
                  "example": "student"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/password": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update a user\\'s account data. User id is obtained from jwt",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sample schema to update user password",
            "schema": {
              "type": "object",
              "properties": {
                "current_password": {
                  "type": "string",
                  "example": "password123"
                },
                "new_password": {
                  "type": "string",
                  "example": "moreSecurePass11a%^"
                },
                "repeat_new_password": {
                  "type": "string",
                  "example": "thisPassDoesntMatch"
                }
              },
              "required": [
                "current_password",
                "new_password",
                "repeat_new_password"
              ]
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses": {
      "post": {
        "tags": [
          "Courses"
        ],
        "description": "Create a new course. Limited to lecturers only.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sample body schema to create a new course",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Xcode"
                },
                "description": {
                  "type": "string",
                  "example": "Learn how to use xcode with the swift programming language to develop IOS mobile apps"
                },
                "details": {
                  "type": "string",
                  "example": "In this course, you will learn the basics of the swift programming language, make and design elements with xcode and launch an app"
                },
                "caption": {
                  "type": "string",
                  "example": "Lead by industry professionals to master IOS app development"
                },
                "category": {
                  "type": "string",
                  "example": "programming language,app development,sofware"
                }
              },
              "required": [
                "title",
                "description",
                "details",
                "caption",
                "category"
              ]
            }
          },
          {
            "name": "thumbnail",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "The file object of the thumbnail of the course"
          },
          {
            "name": "video",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "The file object of the video of the course"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success, return the newly created course.",
            "schema": {
              "type": "object",
              "properties": {
                "courseID": {
                  "type": "number",
                  "example": 9
                },
                "title": {
                  "type": "string",
                  "example": "Xcode"
                },
                "thumbnail": {
                  "type": "string",
                  "example": "<Buffer> object"
                },
                "description": {
                  "type": "string",
                  "example": "Learn how to use xcode with the swift programming language to develop IOS mobile apps"
                },
                "details": {
                  "type": "string",
                  "example": "In this course, you will learn the basics of the swift programming language, make and design elements with xcode and launch an app"
                },
                "caption": {
                  "type": "string",
                  "example": "Lead by industry professionals to master IOS app development"
                },
                "category": {
                  "type": "string",
                  "example": "programming language,app development,sofware"
                },
                "totalRate": {
                  "type": "number",
                  "example": 0
                },
                "ratings": {
                  "type": "number",
                  "example": 0
                },
                "video": {
                  "type": "string",
                  "example": "<Buffer> object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Courses"
        ],
        "description": "Get a list of all courses",
        "responses": {
          "200": {
            "description": "Success, returns a list of course objects.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "courseID": {
                    "type": "number",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "example": "Angular JS"
                  },
                  "thumbnail": {
                    "type": "string",
                    "example": "<Buffer> object"
                  },
                  "description": {
                    "type": "string",
                    "example": "A JavaScript-based open-source front-end web framework for developing single-page applications."
                  },
                  "details": {
                    "type": "string",
                    "example": "Learn the fundamentals of Angular JS"
                  },
                  "caption": {
                    "type": "string",
                    "example": "AWS Coaching and Certification helps you build and validate your skills so you can get more out of the cloud."
                  },
                  "category": {
                    "type": "string",
                    "example": "front-end,framework"
                  },
                  "totalRate": {
                    "type": "number",
                    "example": 2000
                  },
                  "ratings": {
                    "type": "number",
                    "example": 500
                  },
                  "video": {
                    "type": "string",
                    "example": "<Buffer> object"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses/without-video": {
      "get": {
        "tags": [
          "Courses"
        ],
        "description": "Get a list of all courses without their introductory video",
        "responses": {
          "200": {
            "description": "Success, returns a list of course objects without their video.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "courseID": {
                    "type": "number",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "example": "Angular JS"
                  },
                  "thumbnail": {
                    "type": "string",
                    "example": "<Buffer> object"
                  },
                  "description": {
                    "type": "string",
                    "example": "A JavaScript-based open-source front-end web framework for developing single-page applications."
                  },
                  "details": {
                    "type": "string",
                    "example": "Learn the fundamentals of Angular JS"
                  },
                  "caption": {
                    "type": "string",
                    "example": "AWS Coaching and Certification helps you build and validate your skills so you can get more out of the cloud."
                  },
                  "category": {
                    "type": "string",
                    "example": "front-end,framework"
                  },
                  "totalRate": {
                    "type": "number",
                    "example": 2000
                  },
                  "ratings": {
                    "type": "number",
                    "example": 500
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses/{id}": {
      "get": {
        "tags": [
          "Courses"
        ],
        "description": "Get a course by its id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the course"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, returns the course objects.",
            "schema": {
              "type": "object",
              "properties": {
                "courseID": {
                  "type": "number",
                  "example": 1
                },
                "title": {
                  "type": "string",
                  "example": "Angular JS"
                },
                "thumbnail": {
                  "type": "string",
                  "example": "<Buffer> object"
                },
                "description": {
                  "type": "string",
                  "example": "A JavaScript-based open-source front-end web framework for developing single-page applications."
                },
                "details": {
                  "type": "string",
                  "example": "Learn the fundamentals of Angular JS"
                },
                "caption": {
                  "type": "string",
                  "example": "AWS Coaching and Certification helps you build and validate your skills so you can get more out of the cloud."
                },
                "category": {
                  "type": "string",
                  "example": "front-end,framework"
                },
                "totalRate": {
                  "type": "number",
                  "example": 2000
                },
                "ratings": {
                  "type": "number",
                  "example": 500
                },
                "video": {
                  "type": "string",
                  "example": "<Buffer> object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Courses"
        ],
        "description": "Update a course",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the course"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Sample body schema to update a pre-existing course course",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Angular JS"
                },
                "description": {
                  "type": "string",
                  "example": "A JavaScript front-end web framework for single-page application development"
                },
                "details": {
                  "type": "string",
                  "example": "Learn Angular JS"
                },
                "caption": {
                  "type": "string",
                  "example": "Lead by industry professionals and gives an industry certification"
                },
                "category": {
                  "type": "string",
                  "example": "front-end,framework"
                }
              },
              "required": [
                "title",
                "description",
                "details",
                "caption",
                "category"
              ]
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, returns the updated course object",
            "schema": {
              "type": "object",
              "properties": {
                "courseID": {
                  "type": "number",
                  "example": 1
                },
                "title": {
                  "type": "string",
                  "example": "Angular JS"
                },
                "thumbnail": {
                  "type": "string",
                  "example": "<Buffer> object"
                },
                "description": {
                  "type": "string",
                  "example": "A JavaScript front-end web framework for single-page application development"
                },
                "details": {
                  "type": "string",
                  "example": "Learn Angular JS"
                },
                "caption": {
                  "type": "string",
                  "example": "Lead by industry professionals and gives an industry certification"
                },
                "category": {
                  "type": "string",
                  "example": "front-end,framework"
                },
                "totalRate": {
                  "type": "number",
                  "example": 2000
                },
                "ratings": {
                  "type": "number",
                  "example": 500
                },
                "video": {
                  "type": "string",
                  "example": "<Buffer> object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Courses"
        ],
        "description": "Delete a course by its id. Limited to lecturers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the course"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success, course deleted. Returns an empty json",
            "schema": {
              "type": "object",
              "properties": {},
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses/search": {
      "get": {
        "tags": [
          "Courses"
        ],
        "description": "Search for courses. Possible matches include title, description, details, caption, category",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "type": "string",
            "description": "The search query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all courses that match the query",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "courseID": {
                    "type": "number",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "example": "Angular JS"
                  },
                  "thumbnail": {
                    "type": "string",
                    "example": "<Buffer> object"
                  },
                  "description": {
                    "type": "string",
                    "example": "A JavaScript front-end web framework for single-page application development"
                  },
                  "details": {
                    "type": "string",
                    "example": "Learn Angular JS"
                  },
                  "caption": {
                    "type": "string",
                    "example": "Lead by industry professionals and gives an industry certification"
                  },
                  "category": {
                    "type": "string",
                    "example": "front-end,framework"
                  },
                  "totalRate": {
                    "type": "number",
                    "example": 2000
                  },
                  "ratings": {
                    "type": "number",
                    "example": 500
                  },
                  "video": {
                    "type": "string",
                    "example": "<Buffer> object"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/lectures": {
      "get": {
        "tags": [
          "Lectures"
        ],
        "description": "Get a list of all lectures",
        "responses": {
          "200": {
            "description": "Success, returns a array of all lecture objects.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "lectureID": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Introduction to Angular"
                  },
                  "description": {
                    "type": "string",
                    "example": "An introduction to the Angular framework."
                  },
                  "category": {
                    "type": "string",
                    "example": "education"
                  },
                  "duration": {
                    "type": "number",
                    "example": 30
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Lectures"
        ],
        "description": "Create a new lecture. Limited to lecturers only.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sample body schema to create a new lecture",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Introduction to swift"
                },
                "description": {
                  "type": "string",
                  "example": "Learn the basics of swift"
                },
                "category": {
                  "type": "string",
                  "example": "education"
                },
                "duration": {
                  "type": "number",
                  "example": 60
                },
                "courseID": {
                  "type": "number",
                  "example": 9
                }
              },
              "required": [
                "name",
                "description",
                "category",
                "duration",
                "courseID"
              ]
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success, return the newly created lecture.",
            "schema": {
              "type": "object",
              "properties": {
                "lectureID": {
                  "type": "number",
                  "example": 50
                },
                "name": {
                  "type": "string",
                  "example": "Introduction to swift"
                },
                "description": {
                  "type": "string",
                  "example": "Learn the basics of swift"
                },
                "category": {
                  "type": "string",
                  "example": "education"
                },
                "duration": {
                  "type": "number",
                  "example": 60
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Missing fields"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/lectures/search": {
      "get": {
        "tags": [
          "Lectures"
        ],
        "description": "Search for lectures. Possible matches include name and description",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "type": "string",
            "description": "The search query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of all lectures that match the query",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "lectureID": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Introduction to Angular"
                  },
                  "description": {
                    "type": "string",
                    "example": "An introduction to the Angular framework."
                  },
                  "category": {
                    "type": "string",
                    "example": "education"
                  },
                  "duration": {
                    "type": "number",
                    "example": 30
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/lectures/{id}": {
      "get": {
        "tags": [
          "Lectures"
        ],
        "description": "Get the lecture by its id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the lecture"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the lecture object that matches the id",
            "schema": {
              "type": "object",
              "properties": {
                "lectureID": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Introduction to Angular"
                },
                "description": {
                  "type": "string",
                  "example": "An introduction to the Angular framework."
                },
                "category": {
                  "type": "string",
                  "example": "education"
                },
                "duration": {
                  "type": "number",
                  "example": 30
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Lectures"
        ],
        "description": "Update an exisiting lecture. Limited to lecturers only.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the lecture"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Sample body schema to update lecture",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Introduction to swift"
                },
                "description": {
                  "type": "string",
                  "example": "Learn the basics of swift"
                },
                "category": {
                  "type": "string",
                  "example": "programming language"
                },
                "duration": {
                  "type": "number",
                  "example": 60
                }
              },
              "required": [
                "name",
                "description",
                "category",
                "duration"
              ]
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, return the newly updated lecture.",
            "schema": {
              "type": "object",
              "properties": {
                "lectureID": {
                  "type": "number",
                  "example": 50
                },
                "name": {
                  "type": "string",
                  "example": "Introduction to swift"
                },
                "description": {
                  "type": "string",
                  "example": "Learn the basics of swift"
                },
                "category": {
                  "type": "string",
                  "example": "programming language"
                },
                "duration": {
                  "type": "number",
                  "example": 60
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Missing fields"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Lectures"
        ],
        "description": "Delete a lecture by its id. Limited to lecturers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the lecture"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success, lecture deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/lectures/{lectureID}/sublectures/{subLectureID}": {
      "get": {
        "tags": [
          "Lectures"
        ],
        "description": "Get the sub-lecture under a lecture",
        "parameters": [
          {
            "name": "lectureID",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the lecture"
          },
          {
            "name": "subLectureID",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the sub-lecture"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the sub-lecture under the lecture",
            "schema": {
              "type": "object",
              "properties": {
                "subLectureID": {
                  "type": "number",
                  "example": 1
                },
                "lectureID": {
                  "type": "number",
                  "example": 1
                },
                "Name": {
                  "type": "string",
                  "example": "Angular Basics"
                },
                "Description": {
                  "type": "string",
                  "example": "Learn the basics of angular"
                },
                "Duration": {
                  "type": "number",
                  "example": 10
                },
                "Video": {
                  "type": "string",
                  "example": "<Buffer> object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Lectures"
        ],
        "description": "Delete a sub-lecture under a lecture. Limited to lecturers",
        "parameters": [
          {
            "name": "lectureID",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the lecture"
          },
          {
            "name": "subLectureID",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the sub-lecture"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success, lecture deleted."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/lectures/{lectureID}/sublectures": {
      "post": {
        "tags": [
          "Lectures"
        ],
        "description": "Create a new sub-lecture under a lecture. Limited to lecturers only.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "lectureID",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the lecture"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Sample body schema to create a new sub-lecture",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Swift basics"
                },
                "description": {
                  "type": "string",
                  "example": "Learn about variables, conditionals, functions and loops"
                },
                "duration": {
                  "type": "number",
                  "example": 600
                }
              },
              "required": [
                "name",
                "description",
                "duration"
              ]
            }
          },
          {
            "name": "video",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "The file object of the sub-lecture video"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Format: 'Bearer (jwt)'",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success, return the newly created sub-lecture.",
            "schema": {
              "type": "object",
              "properties": {
                "subLectureID": {
                  "type": "number",
                  "example": 60
                },
                "lectureID": {
                  "type": "number",
                  "example": 90
                },
                "Name": {
                  "type": "string",
                  "example": "Swift basics"
                },
                "Description": {
                  "type": "string",
                  "example": "Learn about variables, conditionals, functions and loops"
                },
                "Duration": {
                  "type": "number",
                  "example": 600
                },
                "Video": {
                  "type": "string",
                  "example": "<Buffer> object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Missing fields"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses/{courseID}/lectures": {
      "get": {
        "tags": [
          "Courses"
        ],
        "description": "Get all the sub-lectures and lectures under a course",
        "parameters": [
          {
            "name": "courseID",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the course"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an array containg the course as well as its respective lectures and sub-lectures",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "courseID": {
                    "type": "number",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "example": "Angular JS"
                  },
                  "description": {
                    "type": "string",
                    "example": "A JavaScript-based open-source front-end web framework for developing single-page applications."
                  },
                  "video": {
                    "type": "string",
                    "example": "<Buffer> object"
                  },
                  "details": {
                    "type": "string",
                    "example": "Learn the fundamentals of Angular JS"
                  },
                  "caption": {
                    "type": "string",
                    "example": "AWS Coaching and Certification helps you build and validate your skills so you can get more out of the cloud."
                  },
                  "lectures": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "lectureID": {
                          "type": "number",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Introduction to Angular"
                        },
                        "description": {
                          "type": "string",
                          "example": "An introduction to the Angular framework."
                        },
                        "category": {
                          "type": "string",
                          "example": "education"
                        },
                        "duration": {
                          "type": "number",
                          "example": 30
                        },
                        "subLectures": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "subLectureID": {
                                "type": "number",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "Angular Basics"
                              },
                              "description": {
                                "type": "string",
                                "example": "Learn the basics of Angular."
                              },
                              "duration": {
                                "type": "number",
                                "example": 10
                              },
                              "video": {
                                "type": "string",
                                "example": "<Buffer> object"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses/{courseID}/lectures/without-video": {
      "get": {
        "tags": [
          "Courses"
        ],
        "description": "Get all the sub-lectures and lectures under a course, excluding the sub-lecture videos",
        "parameters": [
          {
            "name": "courseID",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the course"
          }
        ],
        "responses": {
          "200": {
            "description": "Return an array containg the course as well as its respective lectures and sub-lectures",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "courseID": {
                    "type": "number",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "example": "Angular JS"
                  },
                  "description": {
                    "type": "string",
                    "example": "A JavaScript-based open-source front-end web framework for developing single-page applications."
                  },
                  "video": {
                    "type": "string",
                    "example": "<Buffer> object"
                  },
                  "details": {
                    "type": "string",
                    "example": "Learn the fundamentals of Angular JS"
                  },
                  "caption": {
                    "type": "string",
                    "example": "AWS Coaching and Certification helps you build and validate your skills so you can get more out of the cloud."
                  },
                  "lectures": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "lectureID": {
                          "type": "number",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Introduction to Angular"
                        },
                        "description": {
                          "type": "string",
                          "example": "An introduction to the Angular framework."
                        },
                        "category": {
                          "type": "string",
                          "example": "education"
                        },
                        "duration": {
                          "type": "number",
                          "example": 30
                        },
                        "subLectures": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "subLectureID": {
                                "type": "number",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "Angular Basics"
                              },
                              "description": {
                                "type": "string",
                                "example": "Learn the basics of Angular."
                              },
                              "duration": {
                                "type": "number",
                                "example": 10
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/quizzes": {
      "get": {
        "tags": [
          "Quizzes"
        ],
        "description": "Get a list of all quizzes",
        "responses": {
          "200": {
            "description": "Success, returns an array of all quiz objects.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "example": "Angular JS Basics"
                  },
                  "description": {
                    "type": "string",
                    "example": "Test your knowledge on the basics of Angular JS."
                  },
                  "totalQuestions": {
                    "type": "number",
                    "example": 5
                  },
                  "totalMarks": {
                    "type": "number",
                    "example": 50
                  },
                  "duration": {
                    "type": "number",
                    "example": 1
                  },
                  "maxAttempts": {
                    "type": "number",
                    "example": 2
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/quizzes/{quizId}": {
      "get": {
        "tags": [
          "Quizzes"
        ],
        "description": "Get a quiz by its id",
        "parameters": [
          {
            "name": "quizId",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the quiz"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, returns the quiz object",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "title": {
                  "type": "string",
                  "example": "Angular JS Basics"
                },
                "description": {
                  "type": "string",
                  "example": "Test your knowledge on the basics of Angular JS."
                },
                "totalQuestions": {
                  "type": "number",
                  "example": 5
                },
                "totalMarks": {
                  "type": "number",
                  "example": 50
                },
                "duration": {
                  "type": "number",
                  "example": 1
                },
                "maxAttempts": {
                  "type": "number",
                  "example": 2
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/quizzes/{quizId}/questions": {
      "get": {
        "tags": [
          "Quizzes"
        ],
        "description": "Get a list of all questions associated to a quiz",
        "parameters": [
          {
            "name": "quizId",
            "in": "path",
            "required": true,
            "type": "int",
            "description": "The id of the quiz"
          }
        ],
        "responses": {
          "200": {
            "description": "Success, returns an array of all quiz questions.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "quizId": {
                    "type": "number",
                    "example": 1
                  },
                  "text": {
                    "type": "string",
                    "example": "What is Angular JS?"
                  },
                  "options": {
                    "type": "array",
                    "example": [
                      "A framework",
                      "A library",
                      "A language",
                      "An IDE"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "correctAnswer": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/quizzes/{quizId}/submit": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "quizId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "any"
                },
                "answers": {
                  "example": "any"
                },
                "duration": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/quizzes/{quizId}/results/{resultId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "quizId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resultId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/quizzes/attempt/{quizId}/{userId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "quizId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{userId}/results": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}